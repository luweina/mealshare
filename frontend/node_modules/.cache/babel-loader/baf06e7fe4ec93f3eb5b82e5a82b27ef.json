{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer } from \"./reducers/porductReducers.js\";\nimport { cartReducer } from \"./reducers/cartReducers.js\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer } from \"./reducers/userReducers.js\";\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer\n});\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/danielna/Desktop/home chef/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,QAGO,+BAHP;AAIA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAA+CC,kBAA/C,QAAyE,4BAAzE;AAMA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAGE,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GAE1B,IAFF;AAGF,MAAMI,OAAO,GAAGhB,eAAe,CAAC;AAC9BiB,EAAAA,WAAW,EAAEb,kBADiB;AAE9Bc,EAAAA,cAAc,EAAEb,qBAFc;AAG9Bc,EAAAA,IAAI,EAAEb,WAHwB;AAI9Bc,EAAAA,SAAS,EAACb,gBAJoB;AAK9Bc,EAAAA,YAAY,EAAEb,mBALgB;AAM9Bc,EAAAA,WAAW,EAAEb;AANiB,CAAD,CAA/B;AASA,MAAMc,YAAY,GAAG;AACnBJ,EAAAA,IAAI,EAAE;AACJK,IAAAA,SAAS,EAAEd;AADP,GADa;AAInBU,EAAAA,SAAS,EAAE;AAAEK,IAAAA,QAAQ,EAAEV;AAAZ;AAJQ,CAArB;AAMA,MAAMW,UAAU,GAAG,CAACxB,KAAD,CAAnB;AACA,MAAMyB,KAAK,GAAG5B,WAAW,CACvBiB,OADuB,EAEvBO,YAFuB,EAGvBpB,mBAAmB,CAACF,eAAe,CAAC,GAAGyB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n} from \"./reducers/porductReducers.js\";\nimport { cartReducer } from \"./reducers/cartReducers.js\";\nimport { userLoginReducer, userRegisterReducer,userDetailsReducer } from \"./reducers/userReducers.js\";\n\n\n\n\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n  const userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin:userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer\n});\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\nconst middleware = [thunk];\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}