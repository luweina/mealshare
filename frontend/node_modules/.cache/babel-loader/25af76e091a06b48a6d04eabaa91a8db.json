{"ast":null,"code":"import _slicedToArray from\"/Users/danielna/Desktop/home chef/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{Form,Button,Row,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import Message from'../components/Message';import Loader from'../components/Loader';import FormContainer from'../components/FormContainer';import{register}from'../actions/userActions';var RegisterScreen=function RegisterScreen(_ref){var location=_ref.location,history=_ref.history;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var dispatch=useDispatch();var userRegister=useSelector(function(state){return state.userRegister;});var loading=userRegister.loading,error=userRegister.error,userInfo=userRegister.userInfo;var redirect=location.search?location.search.split('=')[1]:'/';useEffect(function(){if(userInfo){history.push(redirect);}},[history,userInfo,redirect]);var submitHandler=function submitHandler(e){e.preventDefault();if(password!==confirmPassword){setMessage('Passwords do not match');}else{dispatch(register(name,email,password));}};return/*#__PURE__*/React.createElement(FormContainer,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Create Account\"),message&&/*#__PURE__*/React.createElement(Message,{variant:\"danger\"},message),error&&/*#__PURE__*/React.createElement(Message,{variant:\"danger\"},error),loading&&/*#__PURE__*/React.createElement(Loader,null),/*#__PURE__*/React.createElement(Form,{onSubmit:submitHandler},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"name\"},/*#__PURE__*/React.createElement(Form.Label,null,\"name \"),/*#__PURE__*/React.createElement(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"email\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Email Address\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"password\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Enter password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})),/*#__PURE__*/React.createElement(Form.Group,{controlId:\"confirmPassword\"},/*#__PURE__*/React.createElement(Form.Label,null,\" Confirm Password\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"password\",placeholder:\"Confirm Password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"primary\"},\"Create Account\")),/*#__PURE__*/React.createElement(Row,{className:\"py-3\"},/*#__PURE__*/React.createElement(Col,null,\"Have an Account?\",' ',/*#__PURE__*/React.createElement(Link,{to:redirect?\"/login?redirect=\".concat(redirect):'/login'},\"Login\"))));};export default RegisterScreen;","map":{"version":3,"sources":["/Users/danielna/Desktop/home chef/frontend/src/screens/RegisterScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","FormContainer","register","RegisterScreen","location","history","email","setEmail","name","setName","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userRegister","state","loading","error","userInfo","redirect","search","split","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [name, setName] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if(password !==confirmPassword) {\n        setMessage('Passwords do not match')\n    } else {\n        dispatch(register(name, email, password))\n\n    }\n\n  }\n\n  return (\n    <FormContainer>\n      <h1>Create Account</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n      <Form.Group controlId='name'>\n          <Form.Label>name </Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label> Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm Password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Create Account\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen"]},"metadata":{},"sourceType":"module"}