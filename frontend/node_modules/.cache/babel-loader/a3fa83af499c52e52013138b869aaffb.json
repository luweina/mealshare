{"ast":null,"code":"import { CART_ADD_ITEM } from \"../constants/CartConstants.js\";\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product);\n      console.log(existItem);\n\n      if (existItem) {\n        return { ...state,\n          cartItem: state.cartItem.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItem: [...state.cartItem, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/danielna/Desktop/home chef/frontend/src/reducers/CartReducers.js"],"names":["CART_ADD_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","console","log","cartItem","map"],"mappings":"AAAA,SAASA,aAAT,QAA8B,+BAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,aAAL;AACE,YAAMM,IAAI,GAAGF,MAAM,CAACG,OAApB;AAEA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAA5B,CAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAaL,SAAb;;AACA,UAAIA,SAAJ,EAAe;AACb,eAAO,EACL,GAAGN,KADE;AAELY,UAAAA,QAAQ,EACNZ,KAAK,CAACY,QAAN,CAAeC,GAAf,CAAoBL,CAAD,IACjBA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAD3C;AAHG,SAAP;AAQD,OATD,MASO;AACL,eAAO,EACL,GAAGR,KADE;AAELY,UAAAA,QAAQ,EAAE,CAAC,GAAGZ,KAAK,CAACY,QAAV,EAAoBR,IAApB;AAFL,SAAP;AAID;;AACH;AACE,aAAOJ,KAAP;AAtBJ;AAwBD,CAzBM","sourcesContent":["import { CART_ADD_ITEM } from \"../constants/CartConstants.js\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n\n      const existItem = state.cartItems.find(x => x.product)\n      console.log (existItem)\n      if (existItem) {\n        return {\n          ...state,\n          cartItem:\n            state.cartItem.map((x) =>\n              x.product === existItem.product ? item : x\n            ),\n\n        };\n      } else {\n        return {\n          ...state,\n          cartItem: [...state.cartItem, item],\n        };\n      }\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}