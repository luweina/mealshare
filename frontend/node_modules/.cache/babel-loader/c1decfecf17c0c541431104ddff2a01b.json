{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer } from \"./reducers/porductReducers.js\";\nimport { cartReducer } from \"./reducers/cartReducers.js\"; // const cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n//   ? JSON.parse(localStorage.getItem(\"cartItems\"))\n//   : [];\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/danielna/Desktop/home chef/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,QAGO,+BAHP;AAIA,SAASC,WAAT,QAA4B,4BAA5B,C,CAIA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC9BQ,EAAAA,WAAW,EAAEJ,kBADiB;AAE9BK,EAAAA,cAAc,EAAEJ,qBAFc;AAG9BK,EAAAA,IAAI,EAAEJ;AAHwB,CAAD,CAA/B;AAMA,MAAMK,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACV,KAAD,CAAnB;AACA,MAAMW,KAAK,GAAGd,WAAW,CACvBQ,OADuB,EAEvBI,YAFuB,EAGvBR,mBAAmB,CAACF,eAAe,CAAC,GAAGW,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n} from \"./reducers/porductReducers.js\";\nimport { cartReducer } from \"./reducers/cartReducers.js\";\n\n\n\n// const cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n//   ? JSON.parse(localStorage.getItem(\"cartItems\"))\n//   : [];\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n});\n\nconst initialState = {  };\nconst middleware = [thunk];\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}