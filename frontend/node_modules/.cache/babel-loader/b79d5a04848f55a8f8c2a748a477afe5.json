{"ast":null,"code":"import _slicedToArray from\"/Users/danielna/Desktop/home chef/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Form,Button}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import FormContainer from\"../components/FormContainer\";import CheckoutSteps from\"../components/CheckoutSteps\";import{saveShippingAddress}from'../actions/cartActions';var ShippingScreen=function ShippingScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;var _useState=useState(shippingAddress.address),_useState2=_slicedToArray(_useState,2),address=_useState2[0],setAddress=_useState2[1];// const [city, setCity] = useState(shippingAddress.city)\n// const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n// const [country, setCountry] = useState(shippingAddress.country)\nvar dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(saveShippingAddress({address:address}));history.push('/payment');console.log(\"submit\");};return/*#__PURE__*/React.createElement(FormContainer,null,/*#__PURE__*/React.createElement(CheckoutSteps,{step1:true,step2:true}),/*#__PURE__*/React.createElement(\"h1\",null,\"Add a Note\"),/*#__PURE__*/React.createElement(Form,{onSubmit:submitHandler},/*#__PURE__*/React.createElement(Form.Group,{controlId:\"address\"},/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",placeholder:\"Enter Note\",value:address,onChange:function onChange(e){return setAddress(e.target.value);}})),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"primary\"},\"Continue\")));};export default ShippingScreen;","map":{"version":3,"sources":["/Users/danielna/Desktop/home chef/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","Form","Button","useDispatch","useSelector","FormContainer","CheckoutSteps","saveShippingAddress","ShippingScreen","history","cart","state","shippingAddress","address","setAddress","dispatch","submitHandler","e","preventDefault","push","console","log","target","value"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,IAAT,CAAeC,MAAf,KAA6B,iBAA7B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,mBAAT,KAAoC,wBAApC,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAe,IAAbC,CAAAA,OAAa,MAAbA,OAAa,CACpC,GAAMC,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CADoC,GAE5BE,CAAAA,eAF4B,CAERF,IAFQ,CAE5BE,eAF4B,eAINZ,QAAQ,CAACY,eAAe,CAACC,OAAjB,CAJF,wCAI7BA,OAJ6B,eAIpBC,UAJoB,eAKpC;AACA;AACA;AAEA,GAAMC,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CAEA,GAAMa,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3BA,CAAC,CAACC,cAAF,GACAH,QAAQ,CAACR,mBAAmB,CAAC,CAAEM,OAAO,CAAPA,OAAF,CAAD,CAApB,CAAR,CACAJ,OAAO,CAACU,IAAR,CAAa,UAAb,EACAC,OAAO,CAACC,GAAR,CAAY,QAAZ,EACD,CALD,CAOA,mBACE,oBAAC,aAAD,mBACE,oBAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,EADF,cAEE,2CAFF,cAGE,oBAAC,IAAD,EAAM,QAAQ,CAAEL,aAAhB,eACE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,SAAtB,eAEE,oBAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,YAFd,CAGE,KAAK,CAAEH,OAHT,CAKE,QAAQ,CAAE,kBAACI,CAAD,QAAOH,CAAAA,UAAU,CAACG,CAAC,CAACK,MAAF,CAASC,KAAV,CAAjB,EALZ,EAFF,CADF,cA6CE,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,aA7CF,CAHF,CADF,CAuDD,CAzED,CA2EA,cAAef,CAAAA,cAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({history}) => {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  // const [city, setCity] = useState(shippingAddress.city)\n  // const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  // const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address }))\n    history.push('/payment')\n    console.log(\"submit\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2/>\n      <h1>Add a Note</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          {/* <Form.Label>Address </Form.Label> */}\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Note\"\n            value={address}\n\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        {/* <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter city\"\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter postal code\"\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter country\"\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group> */}\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default ShippingScreen;\n"]},"metadata":{},"sourceType":"module"}